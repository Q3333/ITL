vscode extensions
1. auto close tag
2. rainbow brackets
3. indent rainbow
4. beautify
5. code runner
6. ESlint

Naming Convention
- lowerCamelCase
 - 일반적인 Camel case
- UpperCamelCase
- snake_case
- Hungarian notation
 - u16number / s32num
- kebab-case

JS의 변수
let : 선언은 1번만 가능. 재할당은 계속가능. block scope
const : 선언도 1번만 가능, 재할당은 불가능. block scope
var : ES6 이전에 문제가 많이 발생했음.
 - hoisting 
 var n = 1
function test(){
    
   console.log(n)
    //; 1
   var n = 2
    
   console.log(n) // 2
}
function test(){
   var n;
   console.log(n)
   n = 2
   console.log(n)
}	

let : 할당은 자유, 선언 1번 , block
const : 할당은 1번, 선언도 1번, block
var : 할당 선언 자유지만. 사용하지 않는다.
-------------------
2. 조건문 
 if  else if 

3. loop 문 (while, for)
 - while
 - for
   - for of
   - for in

4. 함수 
 - 선언식 / 표현식

5. 화살표 함수
 - 익명 함수
 - function 표현에 비해 구문이 짧다.
 - 생성자로 사용할수가 없음.
 - 사용법
    - function을 생략
    - 인자가 1개인겨우 괄호도 생략할수 있다.
    - return 이랑 {}도 생략이 가능

 - 배열 (array)

 - Object

 - JSON
   - 문자열이기에 object로 쓰기위해 변환과정이 필요.
   - JSON -> object
      parse
   - object -> JSON
     stringify

   - object : JS 의 Key:value 의 자료구조
   - JSON : 데이터를 표현하기 위한 단순 스트링

 - Array Helper Method
   - 자주 사용하는 로직을 재활용 할 수 있게 만든 일종의 라이브러리
  - forEach, filter, find, map, every, some, reduce

 -forEach
 - array.forEach(callback(element, index, array))

 - map 
  - array.map(callback(element, index))

 -filter 
  - array.filter(callback(element,..))

 - reduce 
  - array.reduce(callback(acc, element, idx,), acc init_value)

 - find 
   - array.find(callback(element, index, array))

 - some & every
   - some 
   - every 









